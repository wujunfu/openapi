---
swagger: "2.0"
info:
  description: omniprimeincSwagger
  version: "1"
  title: guns
  contact:
    name: ""
    email: "test@sensestudio.com"
  license:
    name: ""
host: swagger.io
basePath: /
tags:
- name: authorization-controller
  description: Authorization Controller
- name: blackboard-controller
  description: Blackboard Controller
- name: caller-account-controller
  description: Caller Account Controller
- name: code-controller
  description: Code Controller
- name: dept-controller
  description: Dept Controller
- name: dict-controller
  description: Dict Controller
- name: gate-way-controller
  description: Gate Way Controller
- name: kaptcha-controller
  description: Kaptcha Controller
- name: log-controller
  description: Log Controller
- name: login-controller
  description: Login Controller
- name: login-log-controller
  description: Login Log Controller
- name: menu-controller
  description: Menu Controller
- name: notice-controller
  description: Notice Controller
- name: policy-privilege-definition-controller
  description: Policy Privilege Definition Controller
- name: policy-privilege-dictionary-controller
  description: Policy Privilege Dictionary Controller
- name: resource-controller
  description: Resource Controller
- name: resource-group-controller
  description: Resource Group Controller
- name: role-controller
  description: Role Controller
- name: tenancy-controller
  description: Tenancy Controller
- name: user-mgr-controller
  description: User Mgr Controller
schemes: []
consumes: []
produces: []
paths:
  /account/add:
    post:
      tags:
      - user-mgr-controller
      summary: 添加管理员
      operationId: addUsingPOST_34
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: account
        in: query
        required: false
        type: string
      - name: accountType
        in: query
        required: false
        type: string
      - name: avatar
        in: query
        required: false
        type: string
      - name: createUser
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: deptid
        in: query
        required: false
        type: integer
        format: int32
      - name: email
        in: query
        required: false
        type: string
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: name
        in: query
        required: false
        type: string
      - name: password
        in: query
        required: false
        type: string
      - name: phone
        in: query
        required: false
        type: string
      - name: roleid
        in: query
        required: false
        type: string
      - name: salt
        in: query
        required: false
        type: string
      - name: sex
        in: query
        required: false
        type: integer
        format: int32
      - name: status
        in: query
        required: false
        type: integer
        format: int32
      - name: version
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /account/changePwd:
    get:
      tags:
      - user-mgr-controller
      summary: 修改当前用户的密码
      operationId: changePwdUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: newPwd
        in: query
        description: newPwd
        required: true
        type: string
      - name: oldPwd
        in: query
        description: oldPwd
        required: true
        type: string
      - name: rePwd
        in: query
        description: rePwd
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /account/delete:
    get:
      tags:
      - user-mgr-controller
      summary: 删除用户（逻辑删除）
      operationId: deleteUsingGET_17
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: query
        description: userId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /account/edit:
    post:
      tags:
      - user-mgr-controller
      summary: 修改管理员
      operationId: editUsingPOST_23
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: account
        in: query
        required: false
        type: string
      - name: accountType
        in: query
        required: false
        type: string
      - name: avatar
        in: query
        required: false
        type: string
      - name: createUser
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: deptid
        in: query
        required: false
        type: integer
        format: int32
      - name: email
        in: query
        required: false
        type: string
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: name
        in: query
        required: false
        type: string
      - name: password
        in: query
        required: false
        type: string
      - name: phone
        in: query
        required: false
        type: string
      - name: roleid
        in: query
        required: false
        type: string
      - name: salt
        in: query
        required: false
        type: string
      - name: sex
        in: query
        required: false
        type: integer
        format: int32
      - name: status
        in: query
        required: false
        type: integer
        format: int32
      - name: version
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /account/freeze:
    get:
      tags:
      - user-mgr-controller
      summary: 冻结用户
      operationId: freezeUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: query
        description: userId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /account/list:
    post:
      tags:
      - user-mgr-controller
      summary: 查询管理员列表
      operationId: listUsingPOST_34
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/UserMgrListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /account/reset:
    get:
      tags:
      - user-mgr-controller
      summary: 重置用户的密码
      operationId: resetUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: password
        in: query
        description: password
        required: false
        type: string
      - name: userId
        in: query
        description: userId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /account/setRole:
    get:
      tags:
      - user-mgr-controller
      summary: 分配角色
      operationId: setRoleUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: roleIds
        in: query
        description: roleIds
        required: true
        type: string
      - name: userId
        in: query
        description: userId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /account/unfreeze:
    get:
      tags:
      - user-mgr-controller
      summary: 解除冻结用户
      operationId: unfreezeUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: query
        description: userId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /account/upload:
    post:
      tags:
      - user-mgr-controller
      summary: 上传图片(上传到项目的webapp/static/img)
      operationId: uploadUsingPOST
      schemes: []
      consumes:
      - multipart/form-data
      produces:
      - '*/*'
      parameters:
      - name: file
        in: formData
        description: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /authorization/assign:
    post:
      tags:
      - authorization-controller
      summary: 分配权限
      operationId: assignAppPrivilegeUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: assignAppPrivilege
        description: assignAppPrivilege
        required: true
        schema:
          $ref: '%23/definitions/assignAppPrivilege%E8%AF%B7%E6%B1%82%E5%AF%B9%E8%B1%A1'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /authorization/getAppPrivilegeTreeList:
    post:
      tags:
      - authorization-controller
      summary: 获取app下拥有的api权限列表
      operationId: getAppPrivilegeTreeListUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: appId
        in: query
        description: 应用id
        required: true
        type: string
        allowEmptyValue: false
        x-example: ""
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABList%C2%ABZTreeNode%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /blackboard:
    get:
      tags:
      - blackboard-controller
      summary: blackboard
      operationId: blackboardUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - blackboard-controller
      summary: blackboard
      operationId: blackboardUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - blackboard-controller
      summary: blackboard
      operationId: blackboardUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - blackboard-controller
      summary: blackboard
      operationId: blackboardUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - blackboard-controller
      summary: blackboard
      operationId: blackboardUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - blackboard-controller
      summary: blackboard
      operationId: blackboardUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - blackboard-controller
      summary: blackboard
      operationId: blackboardUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /callerAccount/create:
    post:
      tags:
      - caller-account-controller
      summary: 创建app
      operationId: createAppUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/CallerCreate%E8%AF%B7%E6%B1%82%E5%AF%B9%E8%B1%A1'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABstring%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /callerAccount/deactivate:
    post:
      tags:
      - caller-account-controller
      summary: 删除AppInfo
      operationId: deactivateAppUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/CallerAccountDeactivateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /callerAccount/getInfo:
    post:
      tags:
      - caller-account-controller
      summary: 获取AppInfo
      operationId: getAppInfoUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: appId
        in: query
        description: 应用id
        required: true
        type: string
        allowEmptyValue: false
        x-example: ""
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABCallerAccountInfoRes%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /callerAccount/getList:
    post:
      tags:
      - caller-account-controller
      summary: 获取AppList
      operationId: getAppListUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/callerAppList%E8%AF%B7%E6%B1%82%E5%AF%B9%E8%B1%A1'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes%C2%ABCallerAccountListRes%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /callerAccount/update:
    post:
      tags:
      - caller-account-controller
      summary: 更新app
      operationId: updateAppInfoUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/CallerUpdate%E8%AF%B7%E6%B1%82%E5%AF%B9%E8%B1%A1'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABstring%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /code:
    get:
      tags:
      - code-controller
      summary: index
      operationId: indexUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - code-controller
      summary: index
      operationId: indexUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - code-controller
      summary: index
      operationId: indexUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - code-controller
      summary: index
      operationId: indexUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - code-controller
      summary: index
      operationId: indexUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - code-controller
      summary: index
      operationId: indexUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - code-controller
      summary: index
      operationId: indexUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /code/generate:
    post:
      tags:
      - code-controller
      summary: 生成代码
      operationId: addUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: bizChName
        in: query
        description: 业务名称
        required: true
        type: string
        x-example: ""
      - name: bizEnName
        in: query
        description: 业务英文名称
        required: true
        type: string
        x-example: ""
      - name: path
        in: query
        description: 项目生成类路径
        required: true
        type: string
        x-example: ""
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dept/add:
    post:
      tags:
      - dept-controller
      summary: 添加部门
      operationId: addUsingPOST_8
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: baggage-deptid
        in: header
        description: deptid
        required: true
        type: string
        x-example: ""
      - name: baggage-subdeptids
        in: header
        description: subdeptids
        required: false
        type: string
        x-example: ""
      - name: fullname
        in: query
        required: false
        type: string
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: levels
        in: query
        required: false
        type: integer
        format: int32
      - name: num
        in: query
        required: false
        type: integer
        format: int32
      - name: pid
        in: query
        required: false
        type: integer
        format: int32
      - name: resourceTenancyid
        in: query
        required: false
        type: string
      - name: simplename
        in: query
        required: false
        type: string
      - name: tips
        in: query
        required: false
        type: string
      - name: version
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dept/delete:
    get:
      tags:
      - dept-controller
      summary: 删除部门
      operationId: deleteUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: baggage-deptid
        in: header
        description: deptid
        required: true
        type: string
        x-example: ""
      - name: baggage-subdeptids
        in: header
        description: subdeptids
        required: false
        type: string
        x-example: ""
      - name: deptId
        in: query
        description: deptId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dept/detail:
    get:
      tags:
      - dept-controller
      summary: 部门详情
      operationId: detailUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: baggage-deptid
        in: header
        description: deptid
        required: true
        type: string
        x-example: ""
      - name: baggage-subdeptids
        in: header
        description: subdeptids
        required: false
        type: string
        x-example: ""
      - name: deptId
        in: query
        description: deptId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABDept%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dept/list:
    get:
      tags:
      - dept-controller
      summary: 获取所有部门列表
      operationId: listUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: baggage-deptid
        in: header
        description: deptid
        required: true
        type: string
        x-example: ""
      - name: baggage-subdeptids
        in: header
        description: subdeptids
        required: false
        type: string
        x-example: ""
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABList%C2%ABMap%C2%ABstring,object%C2%BB%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dept/retrieveTenancyResourceLimit:
    post:
      tags:
      - dept-controller
      summary: 获取部门租户root信息
      operationId: retrieveTenancyResourceLimitUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: deptIdReq
        description: deptIdReq
        required: true
        schema:
          $ref: '%23/definitions/DeptId'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABRetrieveTenancyResourceLimitRes%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dept/tree:
    get:
      tags:
      - dept-controller
      summary: 获取部门的tree列表
      operationId: treeUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABList%C2%ABZTreeNode%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dept/update:
    post:
      tags:
      - dept-controller
      summary: 修改部门
      operationId: updateUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: baggage-deptid
        in: header
        description: deptid
        required: true
        type: string
        x-example: ""
      - name: baggage-subdeptids
        in: header
        description: subdeptids
        required: false
        type: string
        x-example: ""
      - name: fullname
        in: query
        required: false
        type: string
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: levels
        in: query
        required: false
        type: integer
        format: int32
      - name: num
        in: query
        required: false
        type: integer
        format: int32
      - name: resourceTenancyid
        in: query
        required: false
        type: string
      - name: simplename
        in: query
        required: false
        type: string
      - name: tips
        in: query
        required: false
        type: string
      - name: version
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dict:
    get:
      tags:
      - dict-controller
      summary: index
      operationId: indexUsingGET_1
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - dict-controller
      summary: index
      operationId: indexUsingHEAD_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - dict-controller
      summary: index
      operationId: indexUsingPOST_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - dict-controller
      summary: index
      operationId: indexUsingPUT_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - dict-controller
      summary: index
      operationId: indexUsingDELETE_1
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - dict-controller
      summary: index
      operationId: indexUsingOPTIONS_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - dict-controller
      summary: index
      operationId: indexUsingPATCH_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dict/add:
    get:
      tags:
      - dict-controller
      summary: add
      operationId: addUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - dict-controller
      summary: add
      operationId: addUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - dict-controller
      summary: add
      operationId: addUsingPOST_9
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - dict-controller
      summary: add
      operationId: addUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - dict-controller
      summary: add
      operationId: addUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - dict-controller
      summary: add
      operationId: addUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - dict-controller
      summary: add
      operationId: addUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dict/delete:
    get:
      tags:
      - dict-controller
      summary: delete
      operationId: deleteUsingGET_8
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - dict-controller
      summary: delete
      operationId: deleteUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - dict-controller
      summary: delete
      operationId: deleteUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - dict-controller
      summary: delete
      operationId: deleteUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - dict-controller
      summary: delete
      operationId: deleteUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - dict-controller
      summary: delete
      operationId: deleteUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - dict-controller
      summary: delete
      operationId: deleteUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dict/detail/{dictId}:
    get:
      tags:
      - dict-controller
      summary: detail
      operationId: detailUsingGET_8
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - dict-controller
      summary: detail
      operationId: detailUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - dict-controller
      summary: detail
      operationId: detailUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - dict-controller
      summary: detail
      operationId: detailUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - dict-controller
      summary: detail
      operationId: detailUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - dict-controller
      summary: detail
      operationId: detailUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - dict-controller
      summary: detail
      operationId: detailUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dict/dict_add:
    get:
      tags:
      - dict-controller
      summary: deptAdd
      operationId: deptAddUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - dict-controller
      summary: deptAdd
      operationId: deptAddUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - dict-controller
      summary: deptAdd
      operationId: deptAddUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - dict-controller
      summary: deptAdd
      operationId: deptAddUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - dict-controller
      summary: deptAdd
      operationId: deptAddUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - dict-controller
      summary: deptAdd
      operationId: deptAddUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - dict-controller
      summary: deptAdd
      operationId: deptAddUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dict/dict_edit/{dictId}:
    get:
      tags:
      - dict-controller
      summary: deptUpdate
      operationId: deptUpdateUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - dict-controller
      summary: deptUpdate
      operationId: deptUpdateUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - dict-controller
      summary: deptUpdate
      operationId: deptUpdateUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - dict-controller
      summary: deptUpdate
      operationId: deptUpdateUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - dict-controller
      summary: deptUpdate
      operationId: deptUpdateUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - dict-controller
      summary: deptUpdate
      operationId: deptUpdateUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - dict-controller
      summary: deptUpdate
      operationId: deptUpdateUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: path
        description: dictId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dict/list:
    get:
      tags:
      - dict-controller
      summary: list
      operationId: listUsingGET_8
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - dict-controller
      summary: list
      operationId: listUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - dict-controller
      summary: list
      operationId: listUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - dict-controller
      summary: list
      operationId: listUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - dict-controller
      summary: list
      operationId: listUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - dict-controller
      summary: list
      operationId: listUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - dict-controller
      summary: list
      operationId: listUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /dict/update:
    get:
      tags:
      - dict-controller
      summary: update
      operationId: updateUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: false
        type: integer
        format: int32
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - dict-controller
      summary: update
      operationId: updateUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: false
        type: integer
        format: int32
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - dict-controller
      summary: update
      operationId: updateUsingPOST_8
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: false
        type: integer
        format: int32
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - dict-controller
      summary: update
      operationId: updateUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: false
        type: integer
        format: int32
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - dict-controller
      summary: update
      operationId: updateUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: false
        type: integer
        format: int32
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - dict-controller
      summary: update
      operationId: updateUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: false
        type: integer
        format: int32
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - dict-controller
      summary: update
      operationId: updateUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: dictId
        in: query
        description: dictId
        required: false
        type: integer
        format: int32
      - name: dictName
        in: query
        description: dictName
        required: false
        type: string
      - name: dictValues
        in: query
        description: dictValues
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /gateway/getApiUrls:
    get:
      tags:
      - gate-way-controller
      summary: 根据条件查询API列表
      operationId: getApiListUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: resourceIds
        in: query
        description: API路径Ids
        required: true
        type: string
        allowEmptyValue: false
        x-example: ""
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: array
            items:
              type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /gateway/getCallerInfo:
    post:
      tags:
      - gate-way-controller
      summary: 获取组列表
      operationId: callerResUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: callerName
        in: query
        description: 应用名称
        required: true
        type: string
        allowEmptyValue: false
        x-example: ""
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/GateWayCallerRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /kaptcha:
    get:
      tags:
      - kaptcha-controller
      summary: index
      operationId: indexUsingGET_2
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - kaptcha-controller
      summary: index
      operationId: indexUsingHEAD_2
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - kaptcha-controller
      summary: index
      operationId: indexUsingPOST_2
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - kaptcha-controller
      summary: index
      operationId: indexUsingPUT_2
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - kaptcha-controller
      summary: index
      operationId: indexUsingDELETE_2
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - kaptcha-controller
      summary: index
      operationId: indexUsingOPTIONS_2
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - kaptcha-controller
      summary: index
      operationId: indexUsingPATCH_2
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /kaptcha/{pictureId}:
    get:
      tags:
      - kaptcha-controller
      summary: renderPicture
      operationId: renderPictureUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: pictureId
        in: path
        description: pictureId
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - kaptcha-controller
      summary: renderPicture
      operationId: renderPictureUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: pictureId
        in: path
        description: pictureId
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - kaptcha-controller
      summary: renderPicture
      operationId: renderPictureUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: pictureId
        in: path
        description: pictureId
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - kaptcha-controller
      summary: renderPicture
      operationId: renderPictureUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: pictureId
        in: path
        description: pictureId
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - kaptcha-controller
      summary: renderPicture
      operationId: renderPictureUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: pictureId
        in: path
        description: pictureId
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - kaptcha-controller
      summary: renderPicture
      operationId: renderPictureUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: pictureId
        in: path
        description: pictureId
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - kaptcha-controller
      summary: renderPicture
      operationId: renderPictureUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: pictureId
        in: path
        description: pictureId
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /log:
    get:
      tags:
      - log-controller
      summary: index
      operationId: indexUsingGET_3
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - log-controller
      summary: index
      operationId: indexUsingHEAD_3
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - log-controller
      summary: index
      operationId: indexUsingPOST_3
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - log-controller
      summary: index
      operationId: indexUsingPUT_3
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - log-controller
      summary: index
      operationId: indexUsingDELETE_3
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - log-controller
      summary: index
      operationId: indexUsingOPTIONS_3
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - log-controller
      summary: index
      operationId: indexUsingPATCH_3
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /log/add:
    get:
      tags:
      - log-controller
      summary: addBussinessLog
      operationId: addBussinessLogUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogCreateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - log-controller
      summary: addBussinessLog
      operationId: addBussinessLogUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogCreateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - log-controller
      summary: addBussinessLog
      operationId: addBussinessLogUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogCreateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - log-controller
      summary: addBussinessLog
      operationId: addBussinessLogUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogCreateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - log-controller
      summary: addBussinessLog
      operationId: addBussinessLogUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogCreateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - log-controller
      summary: addBussinessLog
      operationId: addBussinessLogUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogCreateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - log-controller
      summary: addBussinessLog
      operationId: addBussinessLogUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogCreateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /log/delLog:
    get:
      tags:
      - log-controller
      summary: delLog
      operationId: delLogUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - log-controller
      summary: delLog
      operationId: delLogUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - log-controller
      summary: delLog
      operationId: delLogUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - log-controller
      summary: delLog
      operationId: delLogUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - log-controller
      summary: delLog
      operationId: delLogUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - log-controller
      summary: delLog
      operationId: delLogUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - log-controller
      summary: delLog
      operationId: delLogUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /log/delOptLogByCondition:
    get:
      tags:
      - log-controller
      summary: deleteLogRecord
      operationId: deleteLogRecordUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/DeleteLogReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - log-controller
      summary: deleteLogRecord
      operationId: deleteLogRecordUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/DeleteLogReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - log-controller
      summary: deleteLogRecord
      operationId: deleteLogRecordUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/DeleteLogReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - log-controller
      summary: deleteLogRecord
      operationId: deleteLogRecordUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/DeleteLogReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - log-controller
      summary: deleteLogRecord
      operationId: deleteLogRecordUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/DeleteLogReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - log-controller
      summary: deleteLogRecord
      operationId: deleteLogRecordUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/DeleteLogReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - log-controller
      summary: deleteLogRecord
      operationId: deleteLogRecordUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/DeleteLogReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /log/detail:
    get:
      tags:
      - log-controller
      summary: detail
      operationId: detailUsingGET_9
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - log-controller
      summary: detail
      operationId: detailUsingHEAD_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - log-controller
      summary: detail
      operationId: detailUsingPOST_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - log-controller
      summary: detail
      operationId: detailUsingPUT_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - log-controller
      summary: detail
      operationId: detailUsingDELETE_1
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - log-controller
      summary: detail
      operationId: detailUsingOPTIONS_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - log-controller
      summary: detail
      operationId: detailUsingPATCH_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: id
        in: query
        description: id
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /log/list:
    get:
      tags:
      - log-controller
      summary: list
      operationId: listUsingGET_9
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes'
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - log-controller
      summary: list
      operationId: listUsingHEAD_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - log-controller
      summary: list
      operationId: listUsingPOST_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes'
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - log-controller
      summary: list
      operationId: listUsingPUT_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes'
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - log-controller
      summary: list
      operationId: listUsingDELETE_1
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - log-controller
      summary: list
      operationId: listUsingOPTIONS_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - log-controller
      summary: list
      operationId: listUsingPATCH_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/OptionLogListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /loginLog/delLoginLog:
    get:
      tags:
      - login-log-controller
      summary: 清空登录日志
      operationId: delLogUsingGET_8
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /loginLog/delLoginLogByCondition:
    post:
      tags:
      - login-log-controller
      summary: 根据条件删除登录日志
      operationId: deleteLoginLogRecordUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/DeleteLogReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /loginLog/list:
    post:
      tags:
      - login-log-controller
      summary: 查询登录日志列表
      operationId: listUsingPOST_9
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/LoginLogListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /menu/add:
    post:
      tags:
      - menu-controller
      summary: 新增菜单
      operationId: addUsingPOST_17
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: cnName
        in: query
        required: false
        type: string
      - name: code
        in: query
        required: false
        type: string
      - name: enName
        in: query
        required: false
        type: string
      - name: icon
        in: query
        required: false
        type: string
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: ismenu
        in: query
        required: false
        type: integer
        format: int32
      - name: isopen
        in: query
        required: false
        type: integer
        format: int32
      - name: levels
        in: query
        required: false
        type: integer
        format: int32
      - name: name
        in: query
        required: false
        type: string
      - name: num
        in: query
        required: false
        type: integer
        format: int32
      - name: pcode
        in: query
        required: false
        type: string
      - name: status
        in: query
        required: false
        type: integer
        format: int32
      - name: tips
        in: query
        required: false
        type: string
      - name: url
        in: query
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /menu/edit:
    post:
      tags:
      - menu-controller
      summary: 修该菜单
      operationId: editUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: cnName
        in: query
        required: false
        type: string
      - name: code
        in: query
        required: false
        type: string
      - name: enName
        in: query
        required: false
        type: string
      - name: icon
        in: query
        required: false
        type: string
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: ismenu
        in: query
        required: false
        type: integer
        format: int32
      - name: isopen
        in: query
        required: false
        type: integer
        format: int32
      - name: levels
        in: query
        required: false
        type: integer
        format: int32
      - name: name
        in: query
        required: false
        type: string
      - name: num
        in: query
        required: false
        type: integer
        format: int32
      - name: pcode
        in: query
        required: false
        type: string
      - name: status
        in: query
        required: false
        type: integer
        format: int32
      - name: tips
        in: query
        required: false
        type: string
      - name: url
        in: query
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /menu/list:
    post:
      tags:
      - menu-controller
      summary: 获取菜单列表
      operationId: listUsingPOST_17
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: level
        in: query
        description: level
        required: false
        type: string
      - name: menuName
        in: query
        description: menuName
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /menu/menuTreeList:
    get:
      tags:
      - menu-controller
      summary: 获取菜单列表(首页用)
      operationId: menuTreeListUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /menu/menuTreeListByRoleId:
    get:
      tags:
      - menu-controller
      summary: 获取权限列表
      operationId: menuTreeListByRoleIdUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: roleId
        in: query
        description: roleId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /menu/remove:
    get:
      tags:
      - menu-controller
      summary: 删除菜单
      operationId: removeUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: menuId
        in: query
        description: menuId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /menu/selectMenuTreeList:
    get:
      tags:
      - menu-controller
      summary: 获取菜单列表(选择父级菜单用)
      operationId: selectMenuTreeListUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /menu/view/{menuId}:
    get:
      tags:
      - menu-controller
      summary: 查看菜单
      operationId: viewUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: menuId
        in: path
        description: menuId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /mgr/isLogin:
    get:
      tags:
      - login-controller
      summary: 获取用户权限
      operationId: isLoginUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABUserPermission%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /mgr/login:
    post:
      tags:
      - login-controller
      summary: 登录
      operationId: loginValiUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/LoginReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /mgr/logout:
    get:
      tags:
      - login-controller
      summary: 退出
      operationId: logOutUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABstring%C2%BB'
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /mgr/refreshToken:
    get:
      tags:
      - login-controller
      summary: 刷新token
      operationId: refreshTokenUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /notice:
    get:
      tags:
      - notice-controller
      summary: index
      operationId: indexUsingGET_4
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - notice-controller
      summary: index
      operationId: indexUsingHEAD_4
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - notice-controller
      summary: index
      operationId: indexUsingPOST_4
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - notice-controller
      summary: index
      operationId: indexUsingPUT_4
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - notice-controller
      summary: index
      operationId: indexUsingDELETE_4
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - notice-controller
      summary: index
      operationId: indexUsingOPTIONS_4
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - notice-controller
      summary: index
      operationId: indexUsingPATCH_4
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /notice/add:
    get:
      tags:
      - notice-controller
      summary: add
      operationId: addUsingGET_1
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - notice-controller
      summary: add
      operationId: addUsingHEAD_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - notice-controller
      summary: add
      operationId: addUsingPOST_18
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - notice-controller
      summary: add
      operationId: addUsingPUT_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - notice-controller
      summary: add
      operationId: addUsingDELETE_1
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - notice-controller
      summary: add
      operationId: addUsingOPTIONS_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - notice-controller
      summary: add
      operationId: addUsingPATCH_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /notice/delete:
    get:
      tags:
      - notice-controller
      summary: delete
      operationId: deleteUsingGET_9
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: query
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - notice-controller
      summary: delete
      operationId: deleteUsingHEAD_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: query
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - notice-controller
      summary: delete
      operationId: deleteUsingPOST_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: query
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - notice-controller
      summary: delete
      operationId: deleteUsingPUT_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: query
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - notice-controller
      summary: delete
      operationId: deleteUsingDELETE_1
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: query
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - notice-controller
      summary: delete
      operationId: deleteUsingOPTIONS_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: query
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - notice-controller
      summary: delete
      operationId: deleteUsingPATCH_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: query
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /notice/hello:
    get:
      tags:
      - notice-controller
      summary: hello
      operationId: helloUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - notice-controller
      summary: hello
      operationId: helloUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - notice-controller
      summary: hello
      operationId: helloUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - notice-controller
      summary: hello
      operationId: helloUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - notice-controller
      summary: hello
      operationId: helloUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - notice-controller
      summary: hello
      operationId: helloUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - notice-controller
      summary: hello
      operationId: helloUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /notice/list:
    get:
      tags:
      - notice-controller
      summary: list
      operationId: listUsingGET_10
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - notice-controller
      summary: list
      operationId: listUsingHEAD_2
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - notice-controller
      summary: list
      operationId: listUsingPOST_18
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - notice-controller
      summary: list
      operationId: listUsingPUT_2
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - notice-controller
      summary: list
      operationId: listUsingDELETE_2
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - notice-controller
      summary: list
      operationId: listUsingOPTIONS_2
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - notice-controller
      summary: list
      operationId: listUsingPATCH_2
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: condition
        in: query
        description: condition
        required: false
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /notice/notice_add:
    get:
      tags:
      - notice-controller
      summary: noticeAdd
      operationId: noticeAddUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - notice-controller
      summary: noticeAdd
      operationId: noticeAddUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - notice-controller
      summary: noticeAdd
      operationId: noticeAddUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - notice-controller
      summary: noticeAdd
      operationId: noticeAddUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - notice-controller
      summary: noticeAdd
      operationId: noticeAddUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - notice-controller
      summary: noticeAdd
      operationId: noticeAddUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - notice-controller
      summary: noticeAdd
      operationId: noticeAddUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /notice/notice_update/{noticeId}:
    get:
      tags:
      - notice-controller
      summary: noticeUpdate
      operationId: noticeUpdateUsingGET
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: path
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - notice-controller
      summary: noticeUpdate
      operationId: noticeUpdateUsingHEAD
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: path
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - notice-controller
      summary: noticeUpdate
      operationId: noticeUpdateUsingPOST
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: path
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - notice-controller
      summary: noticeUpdate
      operationId: noticeUpdateUsingPUT
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: path
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - notice-controller
      summary: noticeUpdate
      operationId: noticeUpdateUsingDELETE
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: path
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - notice-controller
      summary: noticeUpdate
      operationId: noticeUpdateUsingOPTIONS
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: path
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - notice-controller
      summary: noticeUpdate
      operationId: noticeUpdateUsingPATCH
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: noticeId
        in: path
        description: noticeId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: string
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /notice/update:
    get:
      tags:
      - notice-controller
      summary: update
      operationId: updateUsingGET_1
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    head:
      tags:
      - notice-controller
      summary: update
      operationId: updateUsingHEAD_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    post:
      tags:
      - notice-controller
      summary: update
      operationId: updateUsingPOST_9
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    put:
      tags:
      - notice-controller
      summary: update
      operationId: updateUsingPUT_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "201":
          description: Created
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
        "404":
          description: Not Found
          examples: {}
          headers: {}
      security: []
      deprecated: false
    delete:
      tags:
      - notice-controller
      summary: update
      operationId: updateUsingDELETE_1
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    options:
      tags:
      - notice-controller
      summary: update
      operationId: updateUsingOPTIONS_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
    patch:
      tags:
      - notice-controller
      summary: update
      operationId: updateUsingPATCH_1
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: content
        in: query
        required: false
        type: string
      - name: creater
        in: query
        required: false
        type: integer
        format: int32
      - name: createtime
        in: query
        required: false
        type: string
        format: date-time
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: title
        in: query
        required: false
        type: string
      - name: type
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            type: object
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /policyPrivilegeDefinition/pageList:
    post:
      tags:
      - policy-privilege-definition-controller
      summary: 获取
      operationId: getPolicyPrivilegeListUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/BasePageReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes%C2%ABList%C2%ABPolicyPrivilegeDefListRes%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /policyPrivilegeDefinition/privilegeInfo:
    post:
      tags:
      - policy-privilege-definition-controller
      summary: 获取
      operationId: getPolicyPrivilegeDefinitionUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: policyPrivilegeId
        in: query
        description: policyPrivilegeId
        required: true
        type: string
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABPolicyPrivilegeDefInfoRes%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /policyPrivilegeDefinition/update:
    post:
      tags:
      - policy-privilege-definition-controller
      summary: 获取
      operationId: updatePolicyPrivilegeDefinitionUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/PolicyPrivilegeDefinitionUpdateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABstring%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /policyPrivilegeDictionary/pageList:
    post:
      tags:
      - policy-privilege-dictionary-controller
      summary: 获取策略权限字典列表
      operationId: getPolicyPrivilegeDictionaryUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/BasePageReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes%C2%ABList%C2%ABPolicyPrivilegeDictionaryEntity%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resource/create:
    post:
      tags:
      - resource-controller
      summary: 创建API
      operationId: createUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/ResourceCreateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABstring%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resource/deactivate:
    post:
      tags:
      - resource-controller
      summary: 删除Resources
      operationId: deactivateResurceUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/ResurceDeactivateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resource/getInfo:
    get:
      tags:
      - resource-controller
      summary: 查询API信息
      operationId: getResourceInfoUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: resourceId
        in: query
        description: APIID
        required: true
        type: string
        allowEmptyValue: false
        x-example: ""
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABResourceInfoRes%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resource/getList:
    post:
      tags:
      - resource-controller
      summary: 查询API列表
      operationId: getResourceListUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/ResourceListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes%C2%ABResourceListRes%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resource/getListByAppId:
    get:
      tags:
      - resource-controller
      summary: 根据条件查询API列表
      operationId: getApiListUsingGET_15
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: appId
        in: query
        description: 应用ID
        required: true
        type: string
        allowEmptyValue: false
        x-example: ""
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABList%C2%ABResourcesFromGroupRes%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resource/update:
    post:
      tags:
      - resource-controller
      summary: 编辑API
      operationId: updateUsingPOST_17
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/ResourceUpdateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABstring%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resourceGroup/create:
    post:
      tags:
      - resource-group-controller
      summary: 创建API组
      operationId: createUsingPOST_15
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/ResourceGroupCreateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABstring%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resourceGroup/deactivate:
    post:
      tags:
      - resource-group-controller
      summary: 删除API组
      operationId: deactivateResurceGroupUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/ResurceGroupDeactivateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resourceGroup/getInfo:
    get:
      tags:
      - resource-group-controller
      summary: 查询API组信息
      operationId: getInfoUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: groupId
        in: query
        description: API组ID
        required: true
        type: string
        allowEmptyValue: false
        x-example: ""
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABResourceGroupInfoRes%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resourceGroup/getList:
    post:
      tags:
      - resource-group-controller
      summary: 查询API组列表
      operationId: getListUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/ResourceGroupListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes%C2%ABResourceGroupListRes%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /resourceGroup/update:
    post:
      tags:
      - resource-group-controller
      summary: 编辑API组
      operationId: updateUsingPOST_25
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/ResourceGroupUpdateReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /role/add:
    post:
      tags:
      - role-controller
      summary: 角色新增
      operationId: addUsingPOST_26
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: createUser
        in: query
        required: false
        type: integer
        format: int32
      - name: deptid
        in: query
        required: false
        type: integer
        format: int32
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: name
        in: query
        required: false
        type: string
      - name: num
        in: query
        required: false
        type: integer
        format: int32
      - name: pid
        in: query
        required: false
        type: integer
        format: int32
      - name: tips
        in: query
        required: false
        type: string
      - name: version
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /role/edit:
    post:
      tags:
      - role-controller
      summary: 角色修改
      operationId: editUsingPOST_15
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - name: createUser
        in: query
        required: false
        type: integer
        format: int32
      - name: deptid
        in: query
        required: false
        type: integer
        format: int32
      - name: id
        in: query
        required: false
        type: integer
        format: int32
      - name: name
        in: query
        required: false
        type: string
      - name: num
        in: query
        required: false
        type: integer
        format: int32
      - name: pid
        in: query
        required: false
        type: integer
        format: int32
      - name: tips
        in: query
        required: false
        type: string
      - name: version
        in: query
        required: false
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /role/list:
    post:
      tags:
      - role-controller
      summary: 获取角色列表
      operationId: listUsingPOST_26
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/RoleListReq'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /role/remove:
    get:
      tags:
      - role-controller
      summary: 删除角色
      operationId: removeUsingGET_15
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: roleId
        in: query
        description: roleId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /role/roleTreeList:
    get:
      tags:
      - role-controller
      summary: 获取角色列表树
      operationId: roleTreeListUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABList%C2%ABZTreeNode%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /role/roleTreeListByUserId:
    get:
      tags:
      - role-controller
      summary: 获取角色列表树根据用户id
      operationId: roleTreeListByUserIdUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: userId
        in: query
        description: userId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABList%C2%ABZTreeNode%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /role/setAuthority:
    get:
      tags:
      - role-controller
      summary: 配置权限
      operationId: setAuthorityUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: ids
        in: query
        description: ids
        required: true
        type: string
      - name: roleId
        in: query
        description: roleId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /role/showAddRoleTreeList:
    get:
      tags:
      - role-controller
      summary: 获取角色列表树
      operationId: showAddRoleTreeListUsingGET_7
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABList%C2%ABZTreeNode%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /role/view/{roleId}:
    get:
      tags:
      - role-controller
      summary: 查看角色
      operationId: viewUsingGET_15
      schemes: []
      consumes: []
      produces:
      - '*/*'
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        type: integer
        format: int32
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /tenancy/createResourceTenancy:
    post:
      tags:
      - tenancy-controller
      summary: createResourceTenancy
      operationId: createResourceTenancyUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/TenancyCreate'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABstring%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /tenancy/deleteResourceTenancy:
    post:
      tags:
      - tenancy-controller
      summary: deleteResourceTenancy
      operationId: deleteResourceTenancyUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/TenancyId'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABstring%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /tenancy/getResourceLimitList:
    post:
      tags:
      - tenancy-controller
      summary: getResourceLimitList
      operationId: getResourceLimitListUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters: []
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABList%C2%ABResourceLimitDefinitionListRes%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /tenancy/getResourceTenancyInfo:
    post:
      tags:
      - tenancy-controller
      summary: getResourceTenancyInfo
      operationId: getResourceTenancyInfoUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/TenancyId'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABTenancyInfoRes%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /tenancy/getResourceTenancyList:
    post:
      tags:
      - tenancy-controller
      summary: getResourceTenancyList
      operationId: getResourceTenancyListUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/TenancyList'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/PageRes%C2%ABList%C2%ABTenancyListRes%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /tenancy/getTenancyList:
    post:
      tags:
      - tenancy-controller
      summary: getTenancyList
      operationId: getResourceTenancyListUsingPOST_15
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/TenancyListNoPage'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABList%C2%ABTenancyListRes%C2%BB%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
  /tenancy/updateResourceTenancy:
    post:
      tags:
      - tenancy-controller
      summary: updateResourceTenancy
      operationId: updateResourceTenancyUsingPOST_7
      schemes: []
      consumes:
      - application/json
      produces:
      - '*/*'
      parameters:
      - in: body
        name: req
        description: req
        required: true
        schema:
          $ref: '%23/definitions/TenancyUpdate'
      responses:
        "200":
          description: OK
          examples: {}
          headers: {}
          schema:
            $ref: '%23/definitions/BaseRes%C2%ABstring%C2%BB'
        "204":
          description: No Content
          examples: {}
          headers: {}
        "401":
          description: Unauthorized
          examples: {}
          headers: {}
        "403":
          description: Forbidden
          examples: {}
          headers: {}
      security: []
      deprecated: false
securityDefinitions: {}
definitions:
  BasePageReq:
    type: object
    discriminator: ""
    properties:
      current:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
    title: BasePageReq
    description: ""
  BaseRes:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: object
        properties: {}
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes
    description: ""
  BaseRes%C2%ABCallerAccountInfoRes%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/CallerAccountInfoRes'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABCallerAccountInfoRes%C2%BB
    description: ""
  BaseRes%C2%ABDept%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/Dept'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABDept%C2%BB
    description: ""
  BaseRes%C2%ABList%C2%ABMap%C2%ABstring,object%C2%BB%C2%BB%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: array
        items:
          $ref: '%23/definitions/Map%C2%ABstring,object%C2%BB'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABList%C2%ABMap%C2%ABstring,object%C2%BB%C2%BB%C2%BB
    description: ""
  BaseRes%C2%ABList%C2%ABResourceLimitDefinitionListRes%C2%BB%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: array
        items:
          $ref: '%23/definitions/ResourceLimitDefinitionListRes'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABList%C2%ABResourceLimitDefinitionListRes%C2%BB%C2%BB
    description: ""
  BaseRes%C2%ABList%C2%ABResourcesFromGroupRes%C2%BB%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: array
        items:
          $ref: '%23/definitions/ResourcesFromGroupRes'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABList%C2%ABResourcesFromGroupRes%C2%BB%C2%BB
    description: ""
  BaseRes%C2%ABList%C2%ABTenancyListRes%C2%BB%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: array
        items:
          $ref: '%23/definitions/TenancyListRes'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABList%C2%ABTenancyListRes%C2%BB%C2%BB
    description: ""
  BaseRes%C2%ABList%C2%ABZTreeNode%C2%BB%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: array
        items:
          $ref: '%23/definitions/ZTreeNode'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABList%C2%ABZTreeNode%C2%BB%C2%BB
    description: ""
  BaseRes%C2%ABPolicyPrivilegeDefInfoRes%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/PolicyPrivilegeDefInfoRes'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABPolicyPrivilegeDefInfoRes%C2%BB
    description: ""
  BaseRes%C2%ABResourceGroupInfoRes%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/ResourceGroupInfoRes'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABResourceGroupInfoRes%C2%BB
    description: ""
  BaseRes%C2%ABResourceInfoRes%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/ResourceInfoRes'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABResourceInfoRes%C2%BB
    description: ""
  BaseRes%C2%ABRetrieveTenancyResourceLimitRes%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/RetrieveTenancyResourceLimitRes'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABRetrieveTenancyResourceLimitRes%C2%BB
    description: ""
  BaseRes%C2%ABTenancyInfoRes%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/TenancyInfoRes'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABTenancyInfoRes%C2%BB
    description: ""
  BaseRes%C2%ABUserPermission%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/UserPermission'
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABUserPermission%C2%BB
    description: ""
  BaseRes%C2%ABstring%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: string
      msg:
        type: string
      success:
        type: boolean
    title: BaseRes%C2%ABstring%C2%BB
    description: ""
  CallerAccountDeactivateReq:
    type: object
    required:
    - appIdList
    - operatePerson
    discriminator: ""
    properties:
      appIdList:
        type: array
        example: ""
        description: 应用id
        items:
          type: string
      operatePerson:
        type: string
        example: ""
        description: 操作者
    title: CallerAccountDeactivateReq
    description: ""
  CallerAccountInfoRes:
    type: object
    discriminator: ""
    properties:
      accountEnabled:
        type: string
        example: ""
        description: 启用:0,停用:1
      accountNonExpired:
        type: string
        example: ""
        description: 账号未过期：0，已过期：1
      accountNonLocked:
        type: string
        example: ""
        description: 未锁定:0,锁定:1
      appId:
        type: string
      appName:
        type: string
      appOwner:
        type: string
      appSecret:
        type: string
      createTs:
        type: string
      desc:
        type: string
      gateCode:
        type: string
      gateName:
        type: string
      lastModTs:
        type: string
      privilege:
        type: string
      secretNonExpired:
        type: string
        example: ""
        description: 密码未过期：0，已过期：1
      sts:
        type: string
      threshold:
        type: string
        example: ""
        description: 阈值
      token:
        type: string
      version:
        type: string
    title: CallerAccountInfoRes
    description: ""
  CallerAccountListRes:
    type: object
    discriminator: ""
    properties:
      accountEnabled:
        type: string
        example: ""
        description: 启用:0,停用:1
      appId:
        type: string
      appName:
        type: string
      appOwner:
        type: string
      appSecret:
        type: string
      createTs:
        type: string
      desc:
        type: string
      gateCode:
        type: string
      lastModTs:
        type: string
      privilege:
        type: string
      sts:
        type: string
        example: ""
        description: 有效:0,删除:1
      threshold:
        type: string
        example: ""
        description: 阈值
      token:
        type: string
    title: CallerAccountListRes
    description: ""
  CallerCreate请求对象:
    type: object
    required:
    - appName
    - desc
    - operatePerson
    discriminator: ""
    properties:
      accountType:
        type: string
        example: ""
        description: 应用类型
      appName:
        type: string
        example: ""
        description: 应用名称
      appOwner:
        type: string
        example: ""
        description: 应用所有者
      appSecret:
        type: string
        example: ""
        description: 密码
      desc:
        type: string
        example: ""
        description: 其他
      gateCode:
        type: string
        example: ""
        description: 数据源
      operatePerson:
        type: string
        example: ""
        description: 操作者
      privilege:
        type: string
        example: ""
        description: 权限分级
      resourceIdList:
        type: array
        example: ""
        description: 权限列表
        items:
          type: string
      threshold:
        type: string
        example: ""
        description: 阈值
      version:
        type: string
        example: ""
        description: 版本
    title: CallerCreate请求对象
    description: 请求CallerCreate的对象属性
  CallerUpdate请求对象:
    type: object
    required:
    - appId
    - appName
    - appOwner
    - operatePerson
    discriminator: ""
    properties:
      accountEnabled:
        type: integer
        format: int32
        example: ""
        description: 启用:0,停用:1
      accountNonExpired:
        type: integer
        format: int32
        example: ""
        description: 账号未过期：0，已过期：1
      accountNonLocked:
        type: integer
        format: int32
        example: ""
        description: 未锁定:0,锁定:1
      accountType:
        type: string
        example: ""
        description: 应用类型
      appId:
        type: string
        example: ""
        description: 应用id
      appName:
        type: string
        example: ""
        description: 应用名称
      appOwner:
        type: string
        example: ""
        description: 应用拥有者
      appSecret:
        type: string
        example: ""
        description: 安全码
      desc:
        type: string
        example: ""
        description: 描述信息
      gateCode:
        type: string
        example: ""
        description: 数据源
      operatePerson:
        type: string
        example: ""
        description: 操作者
      privilege:
        type: string
        example: ""
        description: 权限分级
      secretNonExpired:
        type: integer
        format: int32
        example: ""
        description: 密码未过期：0，已过期：1
      version:
        type: string
        example: ""
        description: 版本
    title: CallerUpdate请求对象
    description: 请求CallerUpdate的对象属性
  DeleteLogReq:
    type: object
    discriminator: ""
    properties:
      beforeDays:
        type: string
      endTime:
        type: string
      recordId:
        type: array
        items:
          type: string
      startTime:
        type: string
    title: DeleteLogReq
    description: ""
  Dept:
    type: object
    discriminator: ""
    properties:
      fullname:
        type: string
      id:
        type: integer
        format: int32
      levels:
        type: integer
        format: int32
      num:
        type: integer
        format: int32
      pid:
        type: integer
        format: int32
      resourceTenancyid:
        type: string
      simplename:
        type: string
      tips:
        type: string
      version:
        type: integer
        format: int32
    title: Dept
    description: ""
  DeptId:
    type: object
    discriminator: ""
    properties:
      deptId:
        type: string
    title: DeptId
    description: ""
  File:
    type: object
    discriminator: ""
    properties:
      absolute:
        type: boolean
      absoluteFile:
        $ref: '%23/definitions/File'
      absolutePath:
        type: string
      canonicalFile:
        $ref: '%23/definitions/File'
      canonicalPath:
        type: string
      directory:
        type: boolean
      executable:
        type: boolean
      file:
        type: boolean
      freeSpace:
        type: integer
        format: int64
      hidden:
        type: boolean
      lastModified:
        type: integer
        format: int64
      name:
        type: string
      parent:
        type: string
      parentFile:
        $ref: '%23/definitions/File'
      path:
        type: string
      readable:
        type: boolean
      totalSpace:
        type: integer
        format: int64
      usableSpace:
        type: integer
        format: int64
      writable:
        type: boolean
    title: File
    description: ""
  GateWayCallerRes:
    type: object
    discriminator: ""
    properties:
      accountNonExpired:
        type: boolean
      accountNonLocked:
        type: boolean
      authorities:
        type: array
        items:
          type: string
      credentialsNonExpired:
        type: boolean
      deptId:
        type: string
      enabled:
        type: boolean
      password:
        type: string
      subDeptIds:
        type: array
        items:
          type: string
      username:
        type: string
    title: GateWayCallerRes
    description: ""
  InputStream:
    type: object
    discriminator: ""
    title: InputStream
    description: ""
  LoginLogListReq:
    type: object
    discriminator: ""
    properties:
      beginTime:
        type: string
      current:
        type: integer
        format: int32
      endTime:
        type: string
      logName:
        type: string
      order:
        type: string
      size:
        type: integer
        format: int32
      userName:
        type: string
    title: LoginLogListReq
    description: ""
  LoginReq:
    type: object
    discriminator: ""
    properties:
      accountType:
        type: string
        example: ""
        description: 账号类型
      password:
        type: string
        example: ""
        description: 密码
      username:
        type: string
        example: ""
        description: 用户姓名
    title: LoginReq
    description: ""
  Map%C2%ABstring,object%C2%BB:
    type: object
    discriminator: ""
    title: Map%C2%ABstring,object%C2%BB
    description: ""
    additionalProperties:
      type: object
      properties: {}
  MenuNode:
    type: object
    discriminator: ""
    properties:
      children:
        type: array
        items:
          $ref: '%23/definitions/MenuNode'
      cnName:
        type: string
      enName:
        type: string
      icon:
        type: string
      id:
        type: integer
        format: int32
      ismenu:
        type: integer
        format: int32
      levels:
        type: integer
        format: int32
      name:
        type: string
      num:
        type: integer
        format: int32
      parentId:
        type: integer
        format: int32
      url:
        type: string
    title: MenuNode
    description: ""
  OptionLogCreateReq:
    type: object
    discriminator: ""
    properties:
      classname:
        type: string
      logname:
        type: string
      logtype:
        type: string
      message:
        type: string
      method:
        type: string
      requestContext:
        type: string
      source:
        type: string
      succeed:
        type: string
      userName:
        type: string
      userid:
        type: integer
        format: int32
    title: OptionLogCreateReq
    description: ""
  OptionLogListReq:
    type: object
    discriminator: ""
    properties:
      beginTime:
        type: string
      current:
        type: integer
        format: int32
      endTime:
        type: string
      logName:
        type: string
      logType:
        type: integer
        format: int32
      order:
        type: string
      size:
        type: integer
        format: int32
      userName:
        type: string
    title: OptionLogListReq
    description: ""
  PageRes:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: object
        properties: {}
      msg:
        type: string
      size:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
    title: PageRes
    description: ""
  PageRes%C2%ABCallerAccountListRes%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/CallerAccountListRes'
      msg:
        type: string
      size:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
    title: PageRes%C2%ABCallerAccountListRes%C2%BB
    description: ""
  PageRes%C2%ABList%C2%ABPolicyPrivilegeDefListRes%C2%BB%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: array
        items:
          $ref: '%23/definitions/PolicyPrivilegeDefListRes'
      msg:
        type: string
      size:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
    title: PageRes%C2%ABList%C2%ABPolicyPrivilegeDefListRes%C2%BB%C2%BB
    description: ""
  PageRes%C2%ABList%C2%ABPolicyPrivilegeDictionaryEntity%C2%BB%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: array
        items:
          $ref: '%23/definitions/PolicyPrivilegeDictionaryEntity'
      msg:
        type: string
      size:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
    title: PageRes%C2%ABList%C2%ABPolicyPrivilegeDictionaryEntity%C2%BB%C2%BB
    description: ""
  PageRes%C2%ABList%C2%ABTenancyListRes%C2%BB%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        type: array
        items:
          $ref: '%23/definitions/TenancyListRes'
      msg:
        type: string
      size:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
    title: PageRes%C2%ABList%C2%ABTenancyListRes%C2%BB%C2%BB
    description: ""
  PageRes%C2%ABResourceGroupListRes%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/ResourceGroupListRes'
      msg:
        type: string
      size:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
    title: PageRes%C2%ABResourceGroupListRes%C2%BB
    description: ""
  PageRes%C2%ABResourceListRes%C2%BB:
    type: object
    discriminator: ""
    properties:
      code:
        type: string
      data:
        $ref: '%23/definitions/ResourceListRes'
      msg:
        type: string
      size:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
    title: PageRes%C2%ABResourceListRes%C2%BB
    description: ""
  PolicyPrivilegeDefInfoRes:
    type: object
    discriminator: ""
    properties:
      policyMandantorys:
        type: array
        example: ""
        description: 默认权限
        items:
          $ref: '%23/definitions/PolicyPrivilegeDictionaryEntity'
      policyOptionals:
        type: array
        example: ""
        description: 非默认已选权限
        items:
          $ref: '%23/definitions/PolicyPrivilegeDictionaryEntity'
      policyPrivilegeId:
        type: string
        example: ""
        description: 策略权限主键id
    title: PolicyPrivilegeDefInfoRes
    description: ""
  PolicyPrivilegeDefListRes:
    type: object
    discriminator: ""
    properties:
      policyCnName:
        type: string
        example: ""
        description: 策略类型中文名称
      policyEnName:
        type: string
        example: ""
        description: 策略类型英文名称
      policyName:
        type: string
        example: ""
        description: 策略类型名称
      policyPrivilegeDictionarys:
        type: array
        example: ""
        description: 策略权限信息
        items:
          $ref: '%23/definitions/PolicyPrivilegeDictionaryEntity'
      policyPrivilegeId:
        type: string
        example: ""
        description: 策略权限id
      policyPrivilegeNames:
        type: array
        example: ""
        description: 策略权限
        items:
          type: string
      policyPrivileges:
        type: array
        example: ""
        description: 策略权限
        items:
          type: string
      policyRootCnName:
        type: string
        example: ""
        description: 策略大类权限中文名称
      policyRootEnName:
        type: string
        example: ""
        description: 策略大类权限英文名称
      policyRootName:
        type: string
        example: ""
        description: 策略大类权限名称
      policyRootType:
        type: string
        example: ""
        description: 策略大类权限类型
      policyType:
        type: string
        example: ""
        description: 策略类型
    title: PolicyPrivilegeDefListRes
    description: ""
  PolicyPrivilegeDefinitionUpdateReq:
    type: object
    discriminator: ""
    properties:
      policyOptionalIDs:
        type: array
        example: ""
        description: 策略主id
        items:
          $ref: '%23/definitions/PolicyPrivilegeDictionaryEntity'
      policyPrivilegeId:
        type: string
        example: ""
        description: 策略主键
    title: PolicyPrivilegeDefinitionUpdateReq
    description: ""
  PolicyPrivilegeDictionaryEntity:
    type: object
    discriminator: ""
    properties:
      policyCnOption:
        type: string
      policyEnOption:
        type: string
      policyId:
        type: string
    title: PolicyPrivilegeDictionaryEntity
    description: ""
  Resource:
    type: object
    discriminator: ""
    properties:
      description:
        type: string
      file:
        $ref: '%23/definitions/File'
      filename:
        type: string
      inputStream:
        $ref: '%23/definitions/InputStream'
      open:
        type: boolean
      readable:
        type: boolean
      uri:
        $ref: '%23/definitions/URI'
      url:
        $ref: '%23/definitions/URL'
    title: Resource
    description: ""
  ResourceCreateReq:
    type: object
    required:
    - operatePerson
    - resourceGroupId
    - resourceName
    discriminator: ""
    properties:
      desc:
        type: string
        example: ""
        description: API描述
      operatePerson:
        type: string
        example: ""
        description: 操作人
      resourceGroupId:
        type: string
        example: ""
        description: API组编号
      resourceName:
        type: string
        example: ""
        description: API名称
    title: ResourceCreateReq
    description: ""
  ResourceGroupCreateReq:
    type: object
    required:
    - groupName
    - operatePerson
    discriminator: ""
    properties:
      desc:
        type: string
        example: ""
        description: resource组描述
      groupName:
        type: string
        example: ""
        description: resource组名称
      operatePerson:
        type: string
        example: ""
        description: 操作人
    title: ResourceGroupCreateReq
    description: ""
  ResourceGroupInfoRes:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      groupId:
        type: string
      groupName:
        type: string
      sts:
        type: string
    title: ResourceGroupInfoRes
    description: ""
  ResourceGroupListReq:
    type: object
    discriminator: ""
    properties:
      current:
        type: integer
        format: int32
      desc:
        type: string
        example: ""
        description: resource组描述
      groupId:
        type: string
        example: ""
        description: resource组ID
      groupName:
        type: string
        example: ""
        description: resource组名称
      size:
        type: integer
        format: int32
      sts:
        type: string
        example: ""
        description: resource组状态
    title: ResourceGroupListReq
    description: ""
  ResourceGroupListRes:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      groupId:
        type: string
      groupName:
        type: string
      sts:
        type: string
    title: ResourceGroupListRes
    description: ""
  ResourceGroupUpdateReq:
    type: object
    required:
    - groupId
    - groupName
    - operatePerson
    discriminator: ""
    properties:
      desc:
        type: string
        example: ""
        description: resource组描述
      groupId:
        type: string
        example: ""
        description: resource组ID
      groupName:
        type: string
        example: ""
        description: resource组名称
      operatePerson:
        type: string
        example: ""
        description: 操作人
    title: ResourceGroupUpdateReq
    description: ""
  ResourceInfoRes:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      resourceGroupId:
        type: string
      resourceId:
        type: string
      resourceName:
        type: string
      sts:
        type: string
    title: ResourceInfoRes
    description: ""
  ResourceLimitDef:
    type: object
    discriminator: ""
    properties:
      limitCnName:
        type: string
      limitEnName:
        type: string
      resourceId:
        type: string
      resourceLimit:
        type: string
    title: ResourceLimitDef
    description: ""
  ResourceLimitDefinitionListRes:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      resourceLimitCnName:
        type: string
      resourceLimitEnName:
        type: string
      resourceLimitId:
        type: string
    title: ResourceLimitDefinitionListRes
    description: ""
  ResourceListReq:
    type: object
    discriminator: ""
    properties:
      current:
        type: integer
        format: int32
      desc:
        type: string
        example: ""
        description: API描述
      resourceGroupId:
        type: string
        example: ""
        description: API组编号
      resourceId:
        type: string
        example: ""
        description: APIID
      resourceName:
        type: string
        example: ""
        description: API名称
      size:
        type: integer
        format: int32
      sts:
        type: string
        example: ""
        description: API状态
    title: ResourceListReq
    description: ""
  ResourceListRes:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      resourceId:
        type: string
      resourceName:
        type: string
      sts:
        type: string
    title: ResourceListRes
    description: ""
  ResourceUpdateReq:
    type: object
    required:
    - operatePerson
    - resourceGroupId
    - resourceId
    - resourceName
    discriminator: ""
    properties:
      desc:
        type: string
        example: ""
        description: API描述
      operatePerson:
        type: string
        example: ""
        description: 操作人
      resourceGroupId:
        type: string
        example: ""
        description: API组编号
      resourceId:
        type: string
        example: ""
        description: APIID
      resourceName:
        type: string
        example: ""
        description: API名称
    title: ResourceUpdateReq
    description: ""
  ResourcesFromGroupRes:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      resourceId:
        type: string
    title: ResourcesFromGroupRes
    description: ""
  ResurceDeactivateReq:
    type: object
    required:
    - operatePerson
    - uuidList
    discriminator: ""
    properties:
      operatePerson:
        type: string
        example: ""
        description: 操作人
      uuidList:
        type: array
        example: ""
        description: api路径列表
        items:
          type: string
    title: ResurceDeactivateReq
    description: ""
  ResurceGroupDeactivateReq:
    type: object
    required:
    - operatePerson
    - uuidList
    discriminator: ""
    properties:
      operatePerson:
        type: string
        example: ""
        description: 操作人
      uuidList:
        type: array
        example: ""
        description: api组列表
        items:
          type: string
    title: ResurceGroupDeactivateReq
    description: ""
  RetrieveTenancyResourceLimitRes:
    type: object
    discriminator: ""
    properties:
      resourceLimitDetail:
        type: array
        items:
          $ref: '%23/definitions/TenancyResourceLimit'
    title: RetrieveTenancyResourceLimitRes
    description: ""
  RoleListReq:
    type: object
    discriminator: ""
    properties:
      createUser:
        type: string
      current:
        type: integer
        format: int32
      roleId:
        type: string
      roleName:
        type: string
      size:
        type: integer
        format: int32
    title: RoleListReq
    description: ""
  TenancyCreate:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      parentTenancyId:
        type: string
      privilege:
        type: string
      resourceLimitDef:
        type: array
        items:
          $ref: '%23/definitions/ResourceLimitDef'
      tenancyName:
        type: string
    title: TenancyCreate
    description: ""
  TenancyId:
    type: object
    discriminator: ""
    properties:
      tenancyId:
        type: string
    title: TenancyId
    description: ""
  TenancyInfoRes:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      parentTenancyId:
        type: string
      resourceLimitDef:
        type: array
        items:
          $ref: '%23/definitions/ResourceLimitDef'
      tenancyId:
        type: string
      tenancyName:
        type: string
    title: TenancyInfoRes
    description: ""
  TenancyList:
    type: object
    discriminator: ""
    properties:
      current:
        type: integer
        format: int32
      desc:
        type: string
      size:
        type: integer
        format: int32
      tenancyName:
        type: string
    title: TenancyList
    description: ""
  TenancyListNoPage:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      tenancyName:
        type: string
    title: TenancyListNoPage
    description: ""
  TenancyListRes:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      parentTenancyId:
        type: string
      tenancyId:
        type: string
      tenancyName:
        type: string
    title: TenancyListRes
    description: ""
  TenancyResourceLimit:
    type: object
    discriminator: ""
    properties:
      resourceLimitDef:
        type: array
        items:
          $ref: '%23/definitions/ResourceLimitDef'
      tenancyId:
        type: string
      tenancyRootSubDeptId:
        type: array
        items:
          type: string
    title: TenancyResourceLimit
    description: ""
  TenancyUpdate:
    type: object
    discriminator: ""
    properties:
      desc:
        type: string
      parentTenancyId:
        type: string
      resourceLimitDef:
        type: array
        items:
          $ref: '%23/definitions/ResourceLimitDef'
      tenancyId:
        type: string
      tenancyName:
        type: string
    title: TenancyUpdate
    description: ""
  URI:
    type: object
    discriminator: ""
    properties:
      absolute:
        type: boolean
      authority:
        type: string
      fragment:
        type: string
      host:
        type: string
      opaque:
        type: boolean
      path:
        type: string
      port:
        type: integer
        format: int32
      query:
        type: string
      rawAuthority:
        type: string
      rawFragment:
        type: string
      rawPath:
        type: string
      rawQuery:
        type: string
      rawSchemeSpecificPart:
        type: string
      rawUserInfo:
        type: string
      scheme:
        type: string
      schemeSpecificPart:
        type: string
      userInfo:
        type: string
    title: URI
    description: ""
  URL:
    type: object
    discriminator: ""
    properties:
      authority:
        type: string
      content:
        type: object
        properties: {}
      defaultPort:
        type: integer
        format: int32
      deserializedFields:
        $ref: '%23/definitions/URLStreamHandler'
      file:
        type: string
      host:
        type: string
      path:
        type: string
      port:
        type: integer
        format: int32
      protocol:
        type: string
      query:
        type: string
      ref:
        type: string
      serializedHashCode:
        type: integer
        format: int32
      userInfo:
        type: string
    title: URL
    description: ""
  URLStreamHandler:
    type: object
    discriminator: ""
    title: URLStreamHandler
    description: ""
  UserEntity:
    type: object
    discriminator: ""
    properties:
      account:
        type: string
      accountType:
        type: string
      avatar:
        type: string
      birthday:
        type: string
        format: date-time
      deptName:
        type: string
      deptid:
        type: integer
        format: int32
      email:
        type: string
      id:
        type: integer
        format: int32
      name:
        type: string
      phone:
        type: string
      roleid:
        type: string
      sex:
        type: integer
        format: int32
    title: UserEntity
    description: ""
  UserMgrListReq:
    type: object
    discriminator: ""
    properties:
      beginTime:
        type: string
      current:
        type: integer
        format: int32
      endTime:
        type: string
      name:
        type: string
      size:
        type: integer
        format: int32
    title: UserMgrListReq
    description: ""
  UserPermission:
    type: object
    discriminator: ""
    properties:
      methods:
        type: array
        items:
          $ref: '%23/definitions/MenuNode'
      titles:
        type: array
        items:
          $ref: '%23/definitions/MenuNode'
      user:
        $ref: '%23/definitions/UserEntity'
    title: UserPermission
    description: ""
  ZTreeNode:
    type: object
    discriminator: ""
    properties:
      checked:
        type: boolean
      cnName:
        type: string
      code:
        type: string
      created:
        type: boolean
      enName:
        type: string
      id:
        type: integer
        format: int32
      name:
        type: string
      open:
        type: boolean
      pId:
        type: integer
        format: int32
      pcode:
        type: string
    title: ZTreeNode
    description: ""
  assignAppPrivilege请求对象:
    type: object
    required:
    - appId
    - operatePerson
    discriminator: ""
    properties:
      appId:
        type: string
        example: ""
        description: 应用名称
      desc:
        type: string
        example: ""
        description: 描述
      operatePerson:
        type: string
        example: ""
        description: 操作者
      resourceList:
        type: array
        example: ""
        description: 应用api集合
        items:
          type: string
    title: assignAppPrivilege请求对象
    description: 设置访问权限
  callerAppList请求对象:
    type: object
    discriminator: ""
    properties:
      accountType:
        type: string
        example: ""
        description: 应用类型
      appId:
        type: string
        example: ""
        description: 用户id
      appName:
        type: string
        example: ""
        description: 应用名称
      appOwner:
        type: string
        example: ""
        description: 应用所有者
      current:
        type: integer
        format: int32
      desc:
        type: string
        example: ""
        description: 其他
      size:
        type: integer
        format: int32
      sts:
        type: string
        example: ""
        description: 状态
    title: callerAppList请求对象
    description: 请求callerAppList的对象属性
